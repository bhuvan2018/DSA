#include<stdio.h>
#include<stdlib.h>
int cost[10][10],n,d[10],p[10],v[10];
void dij(int s){
int i,count=1,min,u;
for(i=0;i<n;i++){
v[i]=0;
p[i]=s;
d[i]=cost[s][i];
}
v[s]=1;
while(count<n){
min=999;
u=-1;
for(i=0;i<n;i++){
if(v[i]==0&&d[i]<min){
min=d[i];
u=i;
}
}
v[u]=1;
for(i=0;i<n;i++){
if(v[i]==0&&d[u]+cost[u][i]<d[i]){
d[i]=d[u]+cost[u][i];
p[i]=u;
}
}
count++;
}
}
void read_mat(){
int i,j;
for(i=0;i<n;i++)
for(j=0;j<n;j++)
scanf("%d",&cost[i][j]);
}
void print_mat(){
int i,j;
for(i=0;i<n;i++){
for(j=0;j<n;j++){
printf("%d\t",cost[i][j]);
}
printf("\n");
}
}
void print_path(int source,int destination){
int i;
i=destination;
while(i!=source){
printf("%d<--",i);
i=p[i];
}
printf("%d=%d",i,d[destination]);
}
void main(){
int s,j;
printf("Enter the no of vertices: ");
scanf("%d",&n);
printf("Enter source vertex: ");
scanf("%d",&s);
printf("Enter cam: ");
read_mat();
printf("===CST===\n");
print_mat();
dij(s);
printf("\nThe shortest path and distance are shown below:\n");
for(j=0;j<n;j++){
print_path(s,j);
printf("\n");
}
}
